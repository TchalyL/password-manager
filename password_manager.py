from cryptography.fernet import Fernet


# Views all username and passwords in the file
def view():
    data = list()
    with open(path, 'r') as f:
        for line in f.readlines():
            data.append(line.rstrip())

    print("------------- Passwords ------------")
    for i in data:
        user, passw = i.split('|')
        # Decrypts the password before displaying it
        print(f"User: {user} | Password: {fer.decrypt(passw.encode()).decode()}")
    print("------------------------------------")



# Create new file if the file storing our passwords doesn't exist and add the password into it
def add():
    name = input("Account Name: ")
    pwd = input("Password: ")

    with open(path, 'a') as f:
        # Encrypts the password before storing it
        f.write(name + '|' + fer.encrypt(pwd.encode()).decode() + "\n")


'''
# Generate random key and store in key file
def write_key():
    key = Fernet.generate_key() # create random key

    # Open file in wb (write in byte) mode
    with open("key.key", 'wb') as key_file:
        # Write in key that was generated by Fernet
        key_file.write(key)
'''


# Load key file and store value in key variable
def load_key():
    file = open("key.key", 'rb')
    key = file.read()
    file.close()
    return key


if __name__ == '__main__':
    path = 'passwords.txt'
    # master_pwd = input("Please enter master password: ")
    key = load_key() # + master_pwd.encode()  # concatenates the encoded master password (converted to bytes) to the end of the key
    fer = Fernet(key)  # initializing encryption module

    while True:
        mode = int(input("View existing passwords [1]\n""Add a new password [2]\n""Close program [3]\n""Input: "))
        if mode == 3:
            break

        if mode == 1:
            view()
        elif mode == 2:
            add()
        else:
            print("Invalid Mode")
            continue
